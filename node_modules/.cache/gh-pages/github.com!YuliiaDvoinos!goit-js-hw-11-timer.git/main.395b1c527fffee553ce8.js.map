{"version":3,"sources":["webpack:///./index.js"],"names":["selector","targetDate","pad","value","String","padStart","moment","time","days","Math","floor","hours","mins","secs","getTimeFormat","CountdownTimer","constructor","this","timerId","refs","$days","document","querySelector","$hours","$mins","$secs","start","setInterval","Date","now","updInterface","textContent"],"mappings":"kHAAA,WA8CoBA,EAAUC,EA9C9B,UAEA,SAASC,EAAKC,GACV,OAAOC,OAAOD,GAAOE,SAAS,EAAG,KAWrC,SAASC,EAAOC,GACZ,OATJ,SAAwBA,GAKpB,MAAO,CAAEC,KAJIN,EAAIO,KAAKC,MAAMH,EAAO,QAIpBI,MAHDT,EAAIO,KAAKC,MAAOH,EAAO,MAAR,OAGPK,KAFTV,EAAIO,KAAKC,MAAOH,EAAO,KAAR,MAEAM,KADfX,EAAIO,KAAKC,MAAOH,EAAO,IAAe,OAK5CO,CAAcP,GAEzB,MAAMQ,EACFC,aAAY,SAAEhB,EAAF,WAAYC,IACpBgB,KAAKC,QAAU,KACfD,KAAKhB,WAAaA,EAClBgB,KAAKE,KAAO,CACRC,MAAOC,SAASC,cAAiBtB,EAAF,wBAC/BuB,OAAQF,SAASC,cAAiBtB,EAAF,yBAChCwB,MAAOH,SAASC,cAAiBtB,EAAF,wBAC/ByB,MAAMJ,SAASC,cAAiBtB,EAAF,yBAGrC0B,QACIT,KAAKC,QAAUS,YAAY,KACvB,MACEpB,EAAOD,EADSW,KAAKhB,WAAa2B,KAAKC,OAE7CZ,KAAKa,aAAavB,IACf,KAGRuB,cAAa,KAAEtB,EAAF,MAAQG,EAAR,KAAeC,EAAf,KAAqBC,IAC9B,MAAM,MAAEO,EAAF,OAASG,EAAT,MAAiBC,EAAjB,MAAwBC,GAAUR,KAAKE,KAC7CC,EAAMW,YAAcvB,EACpBe,EAAOQ,YAAcpB,EACrBa,EAAMO,YAAcnB,EACpBa,EAAMM,YAAclB,GAKRb,EAKV,WALoBC,EAKR,IAAI2B,KAAK,gBAJb,IAAIb,EAAe,CAAEf,WAAUC,eACvCyB,U","file":"main.395b1c527fffee553ce8.js","sourcesContent":["import './styles.css';\n\nfunction pad (value) {\n    return String(value).padStart(2, '0');\n};\n\nfunction getTimeFormat (time) {\n    const days = pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\n    return { days, hours, mins, secs };\n};\n\nfunction moment(time) {\n    return getTimeFormat(time)\n}\nclass CountdownTimer {\n    constructor({ selector, targetDate }) {\n        this.timerId = null;\n        this.targetDate = targetDate;\n        this.refs = {\n            $days: document.querySelector(`${selector} [data-value=\"days\"]`),\n            $hours: document.querySelector(`${selector} [data-value=\"hours\"]`),\n            $mins: document.querySelector(`${selector} [data-value=\"mins\"]`),\n            $secs:document.querySelector(`${selector} [data-value=\"secs\"]`),\n        }\n    }\n     start() {\n         this.timerId = setInterval(() => { \n             const deltaTime = this.targetDate - Date.now()\n         const time = moment(deltaTime)\n         this.updInterface(time)\n         }, 1000)\n         \n    };\n    updInterface({ days, hours, mins, secs }) {\n        const { $days, $hours, $mins, $secs } = this.refs\n        $days.textContent = days\n        $hours.textContent = hours\n        $mins.textContent = mins\n        $secs.textContent = secs \n        \n    }\n}\n\nfunction initTimer (selector, targetDate) {\n    const timer = new CountdownTimer({ selector, targetDate });\n    timer.start()\n\n}\ninitTimer('#timer-1', new Date('Jul 17, 2021'));\n\n\n//second version (чистий копіпаст, просто в гуглі знайшла підходящий варіант таймера :) ) \n// function getTimeRemaining(endtime) {\n//   var t = Date.parse(endtime) - Date.parse(new Date());\n//   var seconds = Math.floor((t / 1000) % 60);\n//   var minutes = Math.floor((t / 1000 / 60) % 60);\n//   var hours = Math.floor((t / (1000 * 60 * 60)) % 24);\n//   var days = Math.floor(t / (1000 * 60 * 60 * 24));\n//   return {\n//     'total': t,\n//     'days': days,\n//     'hours': hours,\n//     'minutes': minutes,\n//     'seconds': seconds\n//   };\n// }\n\n// function initializeClock(id, endtime) {\n//   var clock = document.getElementById(id);\n//   var daysSpan = clock.querySelector('.days');\n//   var hoursSpan = clock.querySelector('.hours');\n//   var minutesSpan = clock.querySelector('.minutes');\n//   var secondsSpan = clock.querySelector('.seconds');\n\n//   function updateClock() {\n//     var t = getTimeRemaining(endtime);\n\n//     daysSpan.innerHTML = t.days;\n//     hoursSpan.innerHTML = ('0' + t.hours).slice(-2);\n//     minutesSpan.innerHTML = ('0' + t.minutes).slice(-2);\n//     secondsSpan.innerHTML = ('0' + t.seconds).slice(-2);\n\n//     if (t.total <= 0) {\n//       clearInterval(timeinterval);\n//     }\n//   }\n\n//   updateClock();\n//   var timeinterval = setInterval(updateClock, 1000);\n// }\n\n// var deadline=\"July 17 2021 00:00:00 GMT+0300\"; //for Ukraine\n// initializeClock('countdown', deadline);"],"sourceRoot":""}